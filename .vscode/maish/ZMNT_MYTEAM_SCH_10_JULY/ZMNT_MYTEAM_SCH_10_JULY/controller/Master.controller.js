sap.ui.define([
	"sap/ui/core/mvc/Controller",
	"sap/ui/Device",
	'sap/ui/model/Filter',
	'sap/ui/unified/DateRange',
	"sap/ui/model/FilterOperator",
	'sap/m/MessageBox',
	'jquery.sap.global'
], function(Controller, Device, Filter, DateRange, FilterOperator, MessageBox, jQuery) {
	"use strict";

	return Controller.extend("myteamappmyteamapp.controller.Master", {

		/**
		 * Called when a controller is instantiated and its View controls (if available) are already created.
		 * Can be used to modify the View before it is displayed, to bind event handlers and do other one-time initialization.
		 * @memberOf myteamappmyteamapp.view.Master
		 */
		onInit: function() {
			this.oFormatYyyymmdd = sap.ui.core.format.DateFormat.getInstance({
				pattern: "yyyy-MM-dd",
				calendarType: sap.ui.core.CalendarType.Gregorian
			});
			var oDateFormat = sap.ui.core.format.DateFormat.getDateTimeInstance({
				pattern: "yyyy-MM-dd\'T\'HH:mm:ss"
			});
			var oList = this.byId("__list1");

			this._list = this.getView().byId("__text0");
			var dateFormat = sap.ui.core.format.DateFormat.getDateInstance({
				style: 'medium'
			});
			var oDate = new Date();
			var oDate1 = dateFormat.format(oDate);
			var oDate2 = oDateFormat.format(oDate);
			this._list.setText(oDate1);
			var oDialog = new sap.m.BusyDialog({

			});
			oDialog.open();
			this._URL = "/sap/opu/odata/sap/ZMNT_MYTEAM_SCHEDULE_SRV";
			var sRelind = "T";
			var sStartDate = oDate2;
			this._setModel(sRelind, sStartDate);

			oList.attachEventOnce("updateFinished", function() {
				// Restore original busy indicator delay for the list

			});
			this.getOwnerComponent().getRouter().getRoute("master").attachPatternMatched(this._onMasterMatched, this);

			this.getOwnerComponent().getRouter().attachBypassed(this.onBypassed, this);

			jQuery.sap.delayedCall(2000, this, function() {
				oDialog.close();
			});
		},
		onSelectionChange: function(oEvent) {
			// get the list item, either from the listItem parameter or from the event's source itself (will depend on the device-dependent mode).
			this._showDetail(oEvent.getParameter("listItem") || oEvent.getSource());
			// this._showDetail(oEvent.getSource());
		},
		_showDetail: function(oItem) {
			var bReplace = !Device.system.phone;
			var objectid = oItem.getProperty("title");
			objectid = objectid.substring(0, 9);
			this.getOwnerComponent().getRouter().navTo("object", {
				objectId: objectid
			}, bReplace);
		},
		onOpenDialog: function() {
			this._oView = this.getView();
			this._oDialog = this._oView.byId("helloDialog");

			// create dialog lazily this._list 
			if (!this._oDialog) {
				// create dialog via fragment factory
				this._oDialog = sap.ui.xmlfragment(this._oView.getId(), "myteamappmyteamapp.view.filter", this);
				// connect dialog to view (models, lifecycle)
				this._oView.addDependent(this._oDialog);
			}

			this._oDialog.open();
		},
		// onClose event handler of the fragment
		onCloseDialog: function() {
			this.getView().byId("helloDialog").close();
		},
		onSearch: function(oEvt) {
			//This code was generated by the layout editor.

			if (oEvt.getParameters().refreshButtonPressed) {
				// Search field's 'refresh' button has been pressed.
				// This is visible if you select any master list item.
				// In this case no new search is triggered, we only
				// refresh the list binding.
				this.onRefresh();
				return;
			}
			// add filter for search
			var aFilters = [];
			var sQuery = oEvt.getSource().getValue();
			if (sQuery && sQuery.length > 0) {

				var filter = new Filter([
					new Filter("Orderid", FilterOperator.Contains, sQuery),
					new Filter("ShortText", FilterOperator.Contains, sQuery)
				], false);

				aFilters.push(filter);
			}
			// update list binding
			var list = this.getView().byId("__list1");
			var binding = list.getBinding("items");
			binding.filter(aFilters, "Application");
		},
		onPressSearch: function(oEvt) {

			this._oTeam = this.getView().byId("RB3-1").getSelected(); //My Team
			this._oWrk = this.getView().byId("RB3-2").getSelected(); //Work Center
			this._oRel = this.getView().byId("CHK-1").getEnabled(); //Relevant
			this._relSel = this.getView().byId("CHK-1").getSelected();
			this._oCom = this.getView().byId("CHK-2").getEnabled(); //Completed
			this._oComSel = this.getView().byId("CHK-2").getSelected(); //Completed
			var sQuery = this.getView().byId("calendar").getSelectedDates();

			if (sQuery.length === 0) {

				var bCompact = !!this.getView().$().closest(".sapUiSizeCompact").length;
				MessageBox.warning(
					"Select a Date and Search.", {
						styleClass: bCompact ? "sapUiSizeCompact" : ""
					}
				);
			}
			var oDate = sQuery[0].getStartDate();
			var sRelInd = ["T", "W"];

			var dateFormat = sap.ui.core.format.DateFormat.getDateTimeInstance({
				pattern: "yyyy-MM-dd\'T\'HH:mm:ss"
			});
			var oDate1 = dateFormat.format(oDate);
			if (oDate1) {
				// set the date
				this._list = this.getView().byId("__text0");
				var dateFormat1 = sap.ui.core.format.DateFormat.getDateInstance({
					style: 'medium'
				});
				// var oDate = new Date();
				var oDate2 = dateFormat1.format(oDate);

				this._list.setText(oDate2);
			}

			if (this._oTeam) {

				this._setModel(sRelInd[0], oDate1);

				if (this._relSel === false && this._oComSel === true) {
					// add filter for search
					var aFilters = [];
					var filter = new Filter([
						new Filter("RelInd", FilterOperator.NE, "X"),
						new Filter("CompInd", FilterOperator.EQ, "X")

					], false);

					aFilters.push(filter);

					// update list binding
					var list = this.getView().byId("__list1");
					var binding = list.getBinding("items");
					binding.filter(aFilters, "Application");

				}
				if (this._oComSel === false && this._relSel === true) {
					// add filter for search
					var aFilters2 = [];
					var filter2 = new Filter([
						new Filter("RelInd", FilterOperator.NE, "X"),
						new Filter("Stat", FilterOperator.NE, "E0005")

					], false);

					aFilters2.push(filter2);

					// update list binding
					var list2 = this.getView().byId("__list1");
					var binding2 = list2.getBinding("items");
					binding2.filter(aFilters2, "Application");
				}

				if (this._oComSel === false && this._relSel === false) {
					// add filter for search
					var aFilters3 = [];
					var filter3 = new Filter([
						new Filter("RelInd", FilterOperator.NE, "X"),
						new Filter("Stat", FilterOperator.NE, "E0005")

					], true);

					aFilters3.push(filter3);

					// update list binding
					var list3 = this.getView().byId("__list1");
					var binding3 = list3.getBinding("items");
					binding3.filter(aFilters3, "Application");
				}

			} else {
				if (this._oWrk) {
					this._setModel(sRelInd[1], oDate1);

					if (!this._oComSel) {
						// add filter for search
						var aFilters1 = [];
						var filter1 = new Filter([
							new Filter("Stat", FilterOperator.NE, "E0005")

						], false);

						aFilters1.push(filter1);

						// update list binding
						var list1 = this.getView().byId("__list1");
						var binding1 = list1.getBinding("items");
						binding1.filter(aFilters1, "Application");
					}

				}

			}

			this.onCloseDialog();

		},

		onPressBac: function(oEvt) {

			var d = this._list.getText();
			var sRelInd = ["T", "W"];
			var oDate = new Date(d);
			oDate.setDate(oDate.getDate() - 1);
			var oDateFormat = sap.ui.core.format.DateFormat.getDateInstance({
				style: 'medium'
			});
			var oDate2 = oDateFormat.format(oDate);
			this._list.setText(oDate2);

			var OdateFormat = sap.ui.core.format.DateFormat.getDateTimeInstance({
				pattern: "yyyy-MM-dd\'T\'HH:mm:ss"
			});
			var oDate1 = OdateFormat.format(oDate);
			this._setModel(sRelInd[0], oDate1);
			if (this._oTeam) {

				if (this._relSel === false && this._oComSel === true) {
					// add filter for search
					var aFilters = [];
					var filter = new Filter([
						new Filter("RelInd", FilterOperator.NE, "X"),
						new Filter("CompInd", FilterOperator.EQ, "X")

					], false);

					aFilters.push(filter);

					// update list binding
					var list = this.getView().byId("__list1");
					var binding = list.getBinding("items");
					binding.filter(aFilters, "Application");

				}
				if (this._oComSel === false && this._relSel === true) {
					// add filter for search
					var aFilters2 = [];
					var filter2 = new Filter([
						new Filter("RelInd", FilterOperator.NE, "X"),
						new Filter("Stat", FilterOperator.NE, "E0005")

					], false);

					aFilters2.push(filter2);

					// update list binding
					var list2 = this.getView().byId("__list1");
					var binding2 = list2.getBinding("items");
					binding2.filter(aFilters2, "Application");
				}

				if (this._oComSel === false && this._relSel === false) {
					// add filter for search
					var aFilters3 = [];
					var filter3 = new Filter([
						new Filter("RelInd", FilterOperator.NE, "X"),
						new Filter("Stat", FilterOperator.NE, "E0005")

					], true);

					aFilters3.push(filter3);

					// update list binding
					var list3 = this.getView().byId("__list1");
					var binding3 = list3.getBinding("items");
					binding3.filter(aFilters3, "Application");
				}

			} else {
				if (this._oWrk) {

					this._setModel(sRelInd[1], oDate1);

					if (!this._oComSel) {

						var aFilters1 = [];
						var filter1 = new Filter([
							new Filter("Stat", FilterOperator.NE, "E0005")

						], false);

						aFilters1.push(filter1);

						// update list binding
						var list1 = this.getView().byId("__list1");
						var binding1 = list1.getBinding("items");
						binding1.filter(aFilters1, "Application");

					}

				}

			}

		},
		onPressFor: function(oEvt) {

			var d = this._list.getText();
			var sRelInd = ["T", "W"];
			var oDate = new Date(d);
			oDate.setDate(oDate.getDate() + 1);
			var dateFormat1 = sap.ui.core.format.DateFormat.getDateInstance({
				style: 'medium'
			});
			var oDate2 = dateFormat1.format(oDate);
			this._list.setText(oDate2);

			var dateFormat = sap.ui.core.format.DateFormat.getDateTimeInstance({
				pattern: "yyyy-MM-dd\'T\'HH:mm:ss"
			});
			var oDate1 = dateFormat.format(oDate);
			this._setModel(sRelInd[0], oDate1);
			if (this._oTeam) {

				if (this._relSel === false && this._oComSel === true) {
					// add filter for search
					var aFilters = [];
					var filter = new Filter([
						new Filter("RelInd", FilterOperator.NE, "X"),
						new Filter("CompInd", FilterOperator.EQ, "X")

					], false);

					aFilters.push(filter);

					// update list binding
					var list = this.getView().byId("__list1");
					var binding = list.getBinding("items");
					binding.filter(aFilters, "Application");

				}
				if (this._oComSel === false && this._relSel === true) {
					// add filter for search
					var aFilters2 = [];
					var filter2 = new Filter([
						new Filter("RelInd", FilterOperator.NE, "X"),
						new Filter("Stat", FilterOperator.NE, "E0005")

					], false);

					aFilters2.push(filter2);

					// update list binding
					var list2 = this.getView().byId("__list1");
					var binding2 = list2.getBinding("items");
					binding2.filter(aFilters2, "Application");
				}

				if (this._oComSel === false && this._relSel === false) {
					// add filter for search
					var aFilters3 = [];
					var filter3 = new Filter([
						new Filter("RelInd", FilterOperator.NE, "X"),
						new Filter("Stat", FilterOperator.NE, "E0005")

					], true);

					aFilters3.push(filter3);

					// update list binding
					var list3 = this.getView().byId("__list1");
					var binding3 = list3.getBinding("items");
					binding3.filter(aFilters3, "Application");
				}

			} else {
				if (this._oWrk) {

					this._setModel(sRelInd[1], oDate1);

					if (!this._oComSel) {

						var aFilters1 = [];
						var filter1 = new Filter([
							new Filter("Stat", FilterOperator.NE, "E0005")

						], false);

						aFilters1.push(filter1);

						// update list binding
						var list1 = this.getView().byId("__list1");
						var binding1 = list1.getBinding("items");
						binding1.filter(aFilters1, "Application");

					}

				}

			}
		},

		onSelect: function(oEvt) {

			var oRel = this.getView().byId("CHK-1");
			var oSel = oEvt.getParameters().selected;

			if (oSel === true) {

				oRel.setEnabled(false);
			} else {
				oRel.setEnabled(true);
			}

		},
		onResetDialog: function(oEvt) {

			var oTeam = this.getView().byId("RB3-1"); //My Team
			oTeam.setSelected(true);
			var oWrk = this.getView().byId("RB3-2"); //Work Center
			oWrk.setSelected(false);
			var oRel = this.getView().byId("CHK-1"); //Relevant
			oRel.setEnabled(true);
			oRel.setSelected(true);
			var oCom = this.getView().byId("CHK-2"); //Completed
			oCom.setEnabled(true);
			oCom.setSelected(true);
			var sQuery = this.getView().byId("calendar");
			sQuery.removeAllSelectedDates();
			sQuery.addSelectedDate(new DateRange({
				startDate: new Date()
			}));
			sQuery.displayDate(new Date());

		},
		_onMasterMatched: function() {
			this.getOwnerComponent().oListSelector.oWhenListLoadingIsDone.then(
				function(mParams) {
					if (mParams.list.getMode() === "None") {
						return;
					}
					var sObjectId = mParams.firstListitem.getBindingContext().getProperty("Orderid");
					this.getRouter().navTo("object", {
						objectId: sObjectId
					}, true);
				}.bind(this),
				function(mParams) {
					if (mParams.error) {
						return;
					}
					this.getRouter().getTargets().display("notFound");
				}.bind(this)
			);
		},
		onBypassed: function() {
			this._oList.removeSelections(true);
		},

		onUpdateFinished: function(oEvent) {

			var aMasterList = this.byId("__list1"),
				aMasterListItems = aMasterList.getItems();

			// If there're items returned, we default to the first item on the list
			if (aMasterListItems.length > 0) {

				aMasterList.setSelectedItem(aMasterListItems[0]);
				this._showDetail(aMasterListItems[0]);
				// return;
				// }
			} else {
				this.getOwnerComponent().getRouter().navTo("object", {
					objectId: 'UNKNOWN'

				}, true);

				this.getOwnerComponent().getRouter().getTargets().display("notFound");

			}

		},

		_setModel: function(sRelind, sDate) {

			var WoDetailModel = new sap.ui.model.odata.ODataModel(this._URL, true);

			var that = this;

			WoDetailModel.read(

				"/WoDetailSet?$filter=RelInd eq '" + sRelind + "' and StartD eq datetime'" + sDate + "'",
				null,
				null, false,
				function(oData1, oResponse) {

					// create JSON model
					that._oODataJSONModel = new sap.ui.model.json.JSONModel({
						delay: 1000
					});
					// set the odata JSON as data of JSON model
					that._oODataJSONModel.setData(oData1);
					that.getView().setModel(that._oODataJSONModel, "WoDetailModel"); // store the model
					sap.ui.getCore().setModel(that._oODataJSONModel, "WoDetailModel");
				});

		},

		_setFilter: function(sField, sValue) {

			// add filter for search
			var aFilters1 = [];
			var filter1 = new Filter([
				new Filter(sField, FilterOperator.EQ, sValue)

			], false);

			aFilters1.push(filter1);

			// update list binding
			var list1 = this.getView().byId("__list1");
			var binding1 = list1.getBinding("items");
			binding1.filter(aFilters1, "Application");

		},
		onRefresh: function(oEvt) {

			var oRefreshButton = oEvt.getParameter("refreshButtonPressed");
			var d = this._list.getText();
			var sRelInd = ["T", "W"];
			var oDate = new Date(d);
			var dateFormat = sap.ui.core.format.DateFormat.getDateTimeInstance({
				pattern: "yyyy-MM-dd\'T\'HH:mm:ss"
			});
			var oDate1 = dateFormat.format(oDate);

			if (oRefreshButton) {

				this._setModel(sRelInd[0], oDate1);

				if (this._oTeam) {

					if (this._relSel === false && this._oComSel === true) {
						// add filter for search
						var aFilters = [];
						var filter = new Filter([
							new Filter("RelInd", FilterOperator.NE, "X"),
							new Filter("CompInd", FilterOperator.EQ, "X")

						], false);

						aFilters.push(filter);

						// update list binding
						var list = this.getView().byId("__list1");
						var binding = list.getBinding("items");
						binding.filter(aFilters, "Application");

					}
					if (this._oComSel === false && this._relSel === true) {
						// add filter for search
						var aFilters2 = [];
						var filter2 = new Filter([
							new Filter("RelInd", FilterOperator.NE, "X"),
							new Filter("Stat", FilterOperator.NE, "E0005")

						], false);

						aFilters2.push(filter2);

						// update list binding
						var list2 = this.getView().byId("__list1");
						var binding2 = list2.getBinding("items");
						binding2.filter(aFilters2, "Application");
					}

					if (this._oComSel === false && this._relSel === false) {
						// add filter for search
						var aFilters3 = [];
						var filter3 = new Filter([
							new Filter("RelInd", FilterOperator.NE, "X"),
							new Filter("Stat", FilterOperator.NE, "E0005")

						], true);

						aFilters3.push(filter3);

						// update list binding
						var list3 = this.getView().byId("__list1");
						var binding3 = list3.getBinding("items");
						binding3.filter(aFilters3, "Application");
					}

				} else {
					if (this._oWrk) {

						this._setModel(sRelInd[1], oDate1);

						if (!this._oComSel) {

							var aFilters1 = [];
							var filter1 = new Filter([
								new Filter("Stat", FilterOperator.NE, "E0005")

							], false);

							aFilters1.push(filter1);

							// update list binding
							var list1 = this.getView().byId("__list1");
							var binding1 = list1.getBinding("items");
							binding1.filter(aFilters1, "Application");

						}

					}

				}

			}
			this._oODataJSONModel.refresh();
			var aMasterList = this.byId("__list1"),
				// aMasterList.detachUpdateFinished();
				aMasterListItems = aMasterList.getItems();

			// // If there're items returned, we default to the first item on the list
			if (aMasterListItems.length > 0) {

				aMasterList.setSelectedItem(aMasterListItems[0]);
				this._showDetail(aMasterListItems[0]);
				// }
			} else {
				this.getOwnerComponent().getRouter().navTo("object", {
					objectId: 'UNKNOWN'

				}, true);

				this.getOwnerComponent().getRouter().getTargets().display("notFound");

			}

			// var oList = this.byId("__list1");
			// // this._oODataJSONModel 
			// oList.attachEventOnce("updateFinished", function() {
			// 	// Restore original busy indicator delay for the list

			// });

			// this.getOwnerComponent().getRouter().getRoute("master").attachPatternMatched(this._onMasterMatched, this);

			// this.getOwnerComponent().getRouter().attachBypassed(this.onBypassed, this);

		},
		_showDetailFromKey: function(sObjectId) {
				var bReplace = !Device.system.phone;
				this.getRouter().navTo("object", {
					objectId: sObjectId

				}, bReplace);
			}
			// onUpdateStarted: function(oEvent) {

		// 	var aMasterList = this.byId("__list1"),
		// 		aMasterListItems = aMasterList.getItems();

		// 	// If there're items returned, we default to the first item on the list
		// 	if (aMasterListItems.length > 0) {

		// 		aMasterList.setSelectedItem(aMasterListItems[0]);
		// 		this._showDetail(aMasterListItems[0]);
		// 		// }
		// 	} else {
		// 		this.getOwnerComponent().getRouter().navTo("object", {
		// 			objectId: 'UNKNOWN'

		// 		}, true);

		// 		this.getOwnerComponent().getRouter().getTargets().display("notFound");

		// 	}

		// },

	});

});